[2024-11-29 17:14:20,615] [INFO] [real_accelerator.py:219:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-11-29 17:14:21,875] [WARNING] [runner.py:215:fetch_hostfile] Unable to find hostfile, will proceed with training with local resources only.
[2024-11-29 17:14:21,875] [INFO] [runner.py:607:main] cmd = /home/nsatch/cs598aie/aie_spec_dec/ashley_new_code/decoding-speculative-decoding/venvs/spec_dec/bin/python3.9 -u -m deepspeed.launcher.launch --world_info=eyJsb2NhbGhvc3QiOiBbMF19 --master_addr=127.0.0.1 --master_port=29500 --enable_each_rank_log=None spec_decoding_final_param.py
[2024-11-29 17:14:22,938] [INFO] [real_accelerator.py:219:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-11-29 17:14:24,158] [INFO] [launch.py:146:main] WORLD INFO DICT: {'localhost': [0]}
[2024-11-29 17:14:24,158] [INFO] [launch.py:152:main] nnodes=1, num_local_procs=1, node_rank=0
[2024-11-29 17:14:24,158] [INFO] [launch.py:163:main] global_rank_mapping=defaultdict(<class 'list'>, {'localhost': [0]})
[2024-11-29 17:14:24,158] [INFO] [launch.py:164:main] dist_world_size=1
[2024-11-29 17:14:24,158] [INFO] [launch.py:168:main] Setting CUDA_VISIBLE_DEVICES=0
[2024-11-29 17:14:24,165] [INFO] [launch.py:256:main] process 467884 spawned with command: ['/home/nsatch/cs598aie/aie_spec_dec/ashley_new_code/decoding-speculative-decoding/venvs/spec_dec/bin/python3.9', '-u', 'spec_decoding_final_param.py', '--local_rank=0']
[2024-11-29 17:14:25,277] [INFO] [real_accelerator.py:219:get_accelerator] Setting ds_accelerator to cuda (auto detect)
1 0 0
[2024-11-29 17:14:27,303] [INFO] [logging.py:128:log_dist] [Rank -1] DeepSpeed info: version=0.15.4, git-hash=unknown, git-branch=unknown
[2024-11-29 17:14:27,304] [INFO] [logging.py:128:log_dist] [Rank -1] quantize_bits = 8 mlp_extra_grouping = False, quantize_groups = 1
[2024-11-29 17:15:05,942] [INFO] [logging.py:128:log_dist] [Rank -1] DeepSpeed info: version=0.15.4, git-hash=unknown, git-branch=unknown
[2024-11-29 17:15:05,943] [INFO] [logging.py:128:log_dist] [Rank -1] quantize_bits = 8 mlp_extra_grouping = False, quantize_groups = 1
Current prompt:  We see a baby rinse a cup. she

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753]], device='cuda:0')
torch.Size([1, 11])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512]], device='cuda:0')
torch.Size([1, 12])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264]], device='cuda:0')
torch.Size([1, 13])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251]], device='cuda:0')
torch.Size([1, 14])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845]], device='cuda:0')
torch.Size([1, 15])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449]],
       device='cuda:0')
torch.Size([1, 16])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264]],
       device='cuda:0')
torch.Size([1, 17])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579]],
       device='cuda:0')
torch.Size([1, 18])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631]], device='cuda:0')
torch.Size([1, 19])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13]], device='cuda:0')
torch.Size([1, 20])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077]], device='cuda:0')
torch.Size([1, 21])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013]], device='cuda:0')
torch.Size([1, 22])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374]], device='cuda:0')
torch.Size([1, 23])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264]], device='cuda:0')
torch.Size([1, 24])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697]],
       device='cuda:0')
torch.Size([1, 25])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946]],
       device='cuda:0')
torch.Size([1, 26])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 27])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364]], device='cuda:0')
torch.Size([1, 28])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753]], device='cuda:0')
torch.Size([1, 29])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264]], device='cuda:0')
torch.Size([1, 30])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369]], device='cuda:0')
torch.Size([1, 31])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697]], device='cuda:0')
torch.Size([1, 32])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828]], device='cuda:0')
torch.Size([1, 33])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13]],
       device='cuda:0')
torch.Size([1, 34])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001]],
       device='cuda:0')
torch.Size([1, 35])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000]],
       device='cuda:0')
torch.Size([1, 36])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058]], device='cuda:0')
torch.Size([1, 37])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429]], device='cuda:0')
torch.Size([1, 38])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252]], device='cuda:0')
torch.Size([1, 39])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509]], device='cuda:0')
torch.Size([1, 40])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986]], device='cuda:0')
torch.Size([1, 41])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254]], device='cuda:0')
torch.Size([1, 42])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254]],
       device='cuda:0')
torch.Size([1, 43])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414]],
       device='cuda:0')
torch.Size([1, 44])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772]],
       device='cuda:0')
torch.Size([1, 45])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307]], device='cuda:0')
torch.Size([1, 46])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12]], device='cuda:0')
torch.Size([1, 47])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120]], device='cuda:0')
torch.Size([1, 48])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15]], device='cuda:0')
torch.Size([1, 49])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254]], device='cuda:0')
torch.Size([1, 50])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480]], device='cuda:0')
torch.Size([1, 51])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920]],
       device='cuda:0')
torch.Size([1, 52])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587]],
       device='cuda:0')
torch.Size([1, 53])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034]],
       device='cuda:0')
torch.Size([1, 54])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539]], device='cuda:0')
torch.Size([1, 55])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531]], device='cuda:0')
torch.Size([1, 56])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539]], device='cuda:0')
torch.Size([1, 57])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531]], device='cuda:0')
torch.Size([1, 58])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509]], device='cuda:0')
torch.Size([1, 59])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587]], device='cuda:0')
torch.Size([1, 60])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034]],
       device='cuda:0')
torch.Size([1, 61])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539]],
       device='cuda:0')
torch.Size([1, 62])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531]],
       device='cuda:0')
torch.Size([1, 63])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509]], device='cuda:0')
torch.Size([1, 64])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895]], device='cuda:0')
torch.Size([1, 65])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65]], device='cuda:0')
torch.Size([1, 66])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887]], device='cuda:0')
torch.Size([1, 67])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733]], device='cuda:0')
torch.Size([1, 68])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672]], device='cuda:0')
torch.Size([1, 69])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139]],
       device='cuda:0')
torch.Size([1, 70])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733]],
       device='cuda:0')
torch.Size([1, 71])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672]],
       device='cuda:0')
torch.Size([1, 72])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563]], device='cuda:0')
torch.Size([1, 73])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175]], device='cuda:0')
torch.Size([1, 74])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571]], device='cuda:0')
torch.Size([1, 75])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023]], device='cuda:0')
torch.Size([1, 76])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555]], device='cuda:0')
torch.Size([1, 77])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11]], device='cuda:0')
torch.Size([1, 84])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499]], device='cuda:0')
torch.Size([1, 86])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207]], device='cuda:0')
torch.Size([1, 87])
Total matched:  tensor([78], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([82], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([119], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([125], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([129], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627]], device='cuda:0')
torch.Size([1, 141])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([138], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([145], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046]], device='cuda:0')
torch.Size([1, 156])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([154], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057]], device='cuda:0')
torch.Size([1, 165])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13]],
       device='cuda:0')
torch.Size([1, 169])
Total matched:  tensor([160], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([161], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781]], device='cuda:0')
torch.Size([1, 173])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584]], device='cuda:0')
torch.Size([1, 174])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([170], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([176], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975]],
       device='cuda:0')
torch.Size([1, 187])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311]],
       device='cuda:0')
torch.Size([1, 188])
Total matched:  tensor([179], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387]],
       device='cuda:0')
torch.Size([1, 189])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40]], device='cuda:0')
torch.Size([1, 192])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40,   1781]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40,   1781,    584]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([185], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40,   1781,    584,    649]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([186], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40,   1781,    584,    649,    656]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40,   1781,    584,    649,    656,    264]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40,   1781,    584,    649,    656,    264,   2731]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40,   1781,    584,    649,    656,    264,   2731,
           2683]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,   1687,   1518,    264,   8945,  74341,    264,  10747,     13,
           1364,    753,  12512,    264,   4251,  15845,    449,    264,   2579,
          15631,     13,   1077,   7013,    374,    264,   2697,  46946,     13,
           1364,    753,    264,  19369,   2697,   3828,     13, 128001, 128000,
           1058,    429,   2252,  34509,  13986,   3254,   3254,  25414,   1772,
            307,     12,   5120,     15,   3254,  39480,  54920,   2587,  43034,
           2539,   9531,   2539,   9531,  34509,   2587,  43034,   2539,   9531,
          34509,  12895,     65,  26887,  11733,  20672,   7139,  11733,  20672,
          24563,   3175,  25571,   5023,  14555,      1, 128001, 128000,   1163,
           3095,    527,     11,    422,    499,   3207,    264,   2748,     11,
            499,   4070,  10534,    433,     13,   1472,   4070,   1027,   3309,
            311,   1095,    701,   1716,    387,    264,   1716,     13,   1472,
           4070,   1027,   3309,    311,   1095,    701,   1716,   1304,  21294,
             13,   1472,   4070,   1027,   3309,    311,   1095,    701,   1716,
           3139,    709,     13,   1628,    499,   4070,   1027,   3309,    311,
           1095,    701,   1716,    387,  11782,    627,   9673,    527,    682,
           1695,   2574,    311,    656,     13,   1628,    358,   4344,    539,
           2133,    311,  18046,    430,    584,   1288,   2349,   3388,    323,
           3009,  20806,   1057,   6980,    387,   6980,     13,   2030,    358,
            656,   1781,    584,    649,    656,    264,   2731,   2683,    315,
          12917,   1057,   2911,    922,  28697,    323,   6975,    311,    387,
          11782,    627,     40,   1781,    584,    649,    656,    264,   2731,
           2683,    315]], device='cuda:0')
torch.Size([1, 200])
Total matched:  tensor([191], device='cuda:0', dtype=torch.int32)
Draft successes:  1
Final output:  We see a baby rinse a cup. she’s wearing a white shirt with a red bow. her hair is a little messy. she’s a cute little girl.class="post-template-default single single-post postid-1100 single-format-standard custom-background full-width full-width-template custom-background full-width-template wpb-js-composer js-composer-fullwidth vc_responsive"Chances are, if you’re a parent, you’ve experienced it. You’ve been told to let your child be a child. You’ve been told to let your child make mistakes. You’ve been told to let your child grow up. And you’ve been told to let your child be creative.
These are all good things to do. And I’m not going to argue that we should change course and stop letting our kids be kids. But I do think we can do a better job of teaching our children about creativity and learning to be creative.
I think we can do a better job of
torch.Size([1, 200])

Current prompt:  A woman is seen speaking to the camera and showing off various tools to the camera. she

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374]], device='cuda:0')
torch.Size([1, 20])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509]], device='cuda:0')
torch.Size([1, 21])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304]], device='cuda:0')
torch.Size([1, 22])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264]], device='cuda:0')
torch.Size([1, 23])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130]], device='cuda:0')
torch.Size([1, 24])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449]],
       device='cuda:0')
torch.Size([1, 25])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264]],
       device='cuda:0')
torch.Size([1, 26])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763]],
       device='cuda:0')
torch.Size([1, 27])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315]], device='cuda:0')
torch.Size([1, 28])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526]], device='cuda:0')
torch.Size([1, 29])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11]], device='cuda:0')
torch.Size([1, 30])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737]], device='cuda:0')
torch.Size([1, 31])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264]], device='cuda:0')
torch.Size([1, 32])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544]], device='cuda:0')
torch.Size([1, 33])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11]],
       device='cuda:0')
torch.Size([1, 34])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776]],
       device='cuda:0')
torch.Size([1, 35])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11]],
       device='cuda:0')
torch.Size([1, 36])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518]], device='cuda:0')
torch.Size([1, 37])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11]], device='cuda:0')
torch.Size([1, 38])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501]], device='cuda:0')
torch.Size([1, 39])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507]], device='cuda:0')
torch.Size([1, 40])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627]], device='cuda:0')
torch.Size([1, 41])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32]], device='cuda:0')
torch.Size([1, 42])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333]],
       device='cuda:0')
torch.Size([1, 43])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 44])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970]],
       device='cuda:0')
torch.Size([1, 45])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365]], device='cuda:0')
torch.Size([1, 46])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311]], device='cuda:0')
torch.Size([1, 47])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  6
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 52])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370]],
       device='cuda:0')
torch.Size([1, 53])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526]],
       device='cuda:0')
torch.Size([1, 54])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 56])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382]], device='cuda:0')
torch.Size([1, 57])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 58])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364]], device='cuda:0')
torch.Size([1, 59])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 0.], device='cuda:0')
Matched tokens:  7
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 65])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264]], device='cuda:0')
torch.Size([1, 66])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 1., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 67])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315]], device='cuda:0')
torch.Size([1, 68])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 69])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11]],
       device='cuda:0')
torch.Size([1, 70])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737]],
       device='cuda:0')
torch.Size([1, 71])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 73])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11]], device='cuda:0')
torch.Size([1, 74])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776]], device='cuda:0')
torch.Size([1, 75])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11]], device='cuda:0')
torch.Size([1, 76])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518]], device='cuda:0')
torch.Size([1, 77])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 81])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 89])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 96])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 98])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 106])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 109])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 113])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 115])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 121])
Total matched:  tensor([119], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 129])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 136])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 143])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 0.], device='cuda:0')
Matched tokens:  7
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 149])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 153])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 156])
Total matched:  tensor([160], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11,   9518]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([161], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11,   9518,     11]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11,   9518,     11,   9501]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11,   9518,     11,   9501,   5507,    627]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 161])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11,   9518,     11,   9501,   5507,    627,     32]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11,   9518,     11,   9501,   5507,    627,     32,
           5333,    374,   3970,  12365,    311,    279,   6382]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 169])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11,   9518,     11,   9501,   5507,    627,     32,
           5333,    374,   3970,  12365,    311,    279,   6382,    323,   9204,
           1022,   5370,   7526,    311,    279]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 176])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     32,   5333,    374,   3970,  12365,    311,    279,   6382,
            323,   9204,   1022,   5370,   7526,    311,    279,   6382,     13,
           1364,    374,  11509,    304,    264,   3130,    449,    264,   2763,
            315,   7526,     11,   2737,    264,   3544,     11,   3776,     11,
           9518,     11,   9501,   5507,    627,     32,   5333,    374,   3970,
          12365,    311,    279,   6382,    323,   9204,   1022,   5370,   7526,
            311,    279,   6382,     13,   1364,    374,  11509,    304,    264,
           3130,    449,    264,   2763,    315,   7526,     11,   2737,    264,
           3544,     11,   3776,     11,   9518,     11,   9501,   5507,    627,
             32,   5333,    374,   3970,  12365,    311,    279,   6382,    323,
           9204,   1022,   5370,   7526,    311,    279,   6382,     13,   1364,
            374,  11509,    304,    264,   3130,    449,    264,   2763,    315,
           7526,     11,   2737,    264,   3544,     11,   3776,     11,   9518,
             11,   9501,   5507,    627,     32,   5333,    374,   3970,  12365,
            311,    279,   6382,    323,   9204,   1022,   5370,   7526,    311,
            279,   6382,     13,   1364,    374,  11509,    304,    264,   3130,
            449,    264,   2763,    315,   7526,     11,   2737,    264,   3544,
             11,   3776,     11,   9518,     11,   9501,   5507,    627,     32,
           5333,    374,   3970,  12365,    311,    279,   6382,    323,   9204,
           1022,   5370,   7526,    311,    279,   6382,     13,   1364,    374,
          11509,    304,    264]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 183])
Total matched:  tensor([191], device='cuda:0', dtype=torch.int32)
Draft successes:  27
Final output:  A woman is seen speaking to the camera and showing off various tools to the camera. she is standing in a room with a lot of tools, including a large, black, square, metal tool.
A woman is seen speaking to the camera and showing off various tools to the camera. she is standing in a room with a lot of tools, including a large, black, square, metal tool.
A woman is seen speaking to the camera and showing off various tools to the camera. she is standing in a room with a lot of tools, including a large, black, square, metal tool.
A woman is seen speaking to the camera and showing off various tools to the camera. she is standing in a room with a lot of tools, including a large, black, square, metal tool.
A woman is seen speaking to the camera and showing off various tools to the camera. she is standing in a
torch.Size([1, 183])

Current prompt:  The ride reaches the top and the man holds out his arms. He counts down and drops the man down to bungee jump. the man

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308]], device='cuda:0')
torch.Size([1, 31])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323]], device='cuda:0')
torch.Size([1, 32])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503]], device='cuda:0')
torch.Size([1, 33])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523]],
       device='cuda:0')
torch.Size([1, 34])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311]],
       device='cuda:0')
torch.Size([1, 35])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279]],
       device='cuda:0')
torch.Size([1, 36])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740]], device='cuda:0')
torch.Size([1, 37])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 38])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001]], device='cuda:0')
torch.Size([1, 39])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000]], device='cuda:0')
torch.Size([1, 40])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729]], device='cuda:0')
torch.Size([1, 41])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298]], device='cuda:0')
torch.Size([1, 42])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542]],
       device='cuda:0')
torch.Size([1, 43])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11]],
       device='cuda:0')
torch.Size([1, 44])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502]],
       device='cuda:0')
torch.Size([1, 45])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007]], device='cuda:0')
torch.Size([1, 46])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289]], device='cuda:0')
torch.Size([1, 47])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916]], device='cuda:0')
torch.Size([1, 48])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11]], device='cuda:0')
torch.Size([1, 49])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332]], device='cuda:0')
torch.Size([1, 50])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482]], device='cuda:0')
torch.Size([1, 51])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693]],
       device='cuda:0')
torch.Size([1, 52])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220]],
       device='cuda:0')
torch.Size([1, 53])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679]],
       device='cuda:0')
torch.Size([1, 54])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22]], device='cuda:0')
torch.Size([1, 55])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25]], device='cuda:0')
torch.Size([1, 56])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884]], device='cuda:0')
torch.Size([1, 57])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684]], device='cuda:0')
torch.Size([1, 58])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315]], device='cuda:0')
torch.Size([1, 59])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279]], device='cuda:0')
torch.Size([1, 60])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326]],
       device='cuda:0')
torch.Size([1, 61])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009]],
       device='cuda:0')
torch.Size([1, 62])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389]],
       device='cuda:0')
torch.Size([1, 63])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279]], device='cuda:0')
torch.Size([1, 64])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010]], device='cuda:0')
torch.Size([1, 65])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974]], device='cuda:0')
torch.Size([1, 66])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520]], device='cuda:0')
torch.Size([1, 67])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555]], device='cuda:0')
torch.Size([1, 68])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298]], device='cuda:0')
torch.Size([1, 69])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542]],
       device='cuda:0')
torch.Size([1, 70])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11]],
       device='cuda:0')
torch.Size([1, 71])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502]],
       device='cuda:0')
torch.Size([1, 72])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007]], device='cuda:0')
torch.Size([1, 73])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289]], device='cuda:0')
torch.Size([1, 74])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916]], device='cuda:0')
torch.Size([1, 75])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11]], device='cuda:0')
torch.Size([1, 76])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332]], device='cuda:0')
torch.Size([1, 77])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11]], device='cuda:0')
torch.Size([1, 84])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862]], device='cuda:0')
torch.Size([1, 86])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397]], device='cuda:0')
torch.Size([1, 87])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([78], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([82], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729]], device='cuda:0')
torch.Size([1, 141])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([119], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([125], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25]], device='cuda:0')
torch.Size([1, 156])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([129], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010]], device='cuda:0')
torch.Size([1, 165])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([138], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298]],
       device='cuda:0')
torch.Size([1, 169])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007]], device='cuda:0')
torch.Size([1, 173])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289]], device='cuda:0')
torch.Size([1, 174])
Total matched:  tensor([145], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([154], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397]],
       device='cuda:0')
torch.Size([1, 187])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612]],
       device='cuda:0')
torch.Size([1, 188])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448]],
       device='cuda:0')
torch.Size([1, 189])
Total matched:  tensor([160], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([161], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298]], device='cuda:0')
torch.Size([1, 192])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([170], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332]], device='cuda:0')
torch.Size([1, 200])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693]], device='cuda:0')
torch.Size([1, 202])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22]],
       device='cuda:0')
torch.Size([1, 205])
Total matched:  tensor([176], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25]],
       device='cuda:0')
torch.Size([1, 206])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884]],
       device='cuda:0')
torch.Size([1, 207])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([179], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315]], device='cuda:0')
torch.Size([1, 209])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279]], device='cuda:0')
torch.Size([1, 210])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326]], device='cuda:0')
torch.Size([1, 211])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009]], device='cuda:0')
torch.Size([1, 212])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009,    389]], device='cuda:0')
torch.Size([1, 213])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009,    389,    279]],
       device='cuda:0')
torch.Size([1, 214])
Total matched:  tensor([185], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009,    389,    279,   2010]],
       device='cuda:0')
torch.Size([1, 215])
Total matched:  tensor([186], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009,    389,    279,   2010,   1974]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009,    389,    279,   2010,   1974,
            520]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009,    389,    279,   2010,   1974,
            520,    555]], device='cuda:0')
torch.Size([1, 218])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009,    389,    279,   2010,   1974,
            520,    555,   2298]], device='cuda:0')
torch.Size([1, 219])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,    791,  12141,  25501,    279,   1948,    323,    279,    893,
          10187,    704,    813,  11977,     13,   1283,  14921,   1523,    323,
          21701,    279,    893,   1523,    311,    293,  14208,     68,   7940,
             13,    279,    893,  35308,    323,  17503,   1523,    311,    279,
           5740,     13, 128001, 128000,   1729,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,  21693,    220,    679,
             22,     25,  41884,   1684,    315,    279,    326,  59009,    389,
            279,   2010,   1974,    520,    555,   2298,  23542,     11,    502,
          10007,    289,   3916,     11,  44332,    482,    555,   2298,  23542,
           5708,   9364,     11,  53817,  12862,   7397,    612,   5448,    198,
           1729,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,  21693,    220,    679,     22,     25,  41884,   1684,
            315,    279,    326,  59009,    389,    279,   2010,   1974,    520,
            555,   2298,  23542,     11,    502,  10007,    289,   3916,     11,
          44332,    482,    555,   2298,  23542,   5708,   9364,     11,  53817,
          12862,   7397,    612,   5448,    198,   1729,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,  21693,    220,
            679,     22,     25,  41884,   1684,    315,    279,    326,  59009,
            389,    279,   2010,   1974,    520,    555,   2298,  23542,     11,
            502,  10007,    289,   3916,     11,  44332,    482,    555,   2298,
          23542,   5708,   9364,     11,  53817,  12862,   7397,    612,   5448,
            198,   1729,   2298,  23542,     11,    502,  10007,    289,   3916,
             11,  44332,    482,  21693,    220,    679,     22,     25,  41884,
           1684,    315,    279,    326,  59009,    389,    279,   2010,   1974,
            520,    555,   2298,  23542]], device='cuda:0')
torch.Size([1, 220])
Total matched:  tensor([191], device='cuda:0', dtype=torch.int32)
Draft successes:  1
Final output:  The ride reaches the top and the man holds out his arms. He counts down and drops the man down to bungee jump. the man jumps and falls down to the bottom.byron bay, new south wales, australia - sep 2017: aerial view of the lighthouse on the headland at byron bay, new south wales, australia - byron bay stock pictures, royalty-free photos & images
byron bay, new south wales, australia - sep 2017: aerial view of the lighthouse on the headland at byron bay, new south wales, australia - byron bay stock pictures, royalty-free photos & images
byron bay, new south wales, australia - sep 2017: aerial view of the lighthouse on the headland at byron bay, new south wales, australia - byron bay stock pictures, royalty-free photos & images
byron bay, new south wales, australia - sep 2017: aerial view of the lighthouse on the headland at byron bay
torch.Size([1, 220])

Current prompt:  Several products are laid out followed by a woman grooming a horse. The woman brushes the horse all around it's body while the horse lays motionless. she

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731]], device='cuda:0')
torch.Size([1, 33])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311]],
       device='cuda:0')
torch.Size([1, 34])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998]],
       device='cuda:0')
torch.Size([1, 35])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279]],
       device='cuda:0')
torch.Size([1, 36])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580]], device='cuda:0')
torch.Size([1, 37])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323]], device='cuda:0')
torch.Size([1, 38])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279]], device='cuda:0')
torch.Size([1, 39])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580]], device='cuda:0')
torch.Size([1, 40])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031]], device='cuda:0')
torch.Size([1, 41])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202]], device='cuda:0')
torch.Size([1, 42])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010]],
       device='cuda:0')
torch.Size([1, 43])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203]],
       device='cuda:0')
torch.Size([1, 44])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323]],
       device='cuda:0')
torch.Size([1, 45])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544]], device='cuda:0')
torch.Size([1, 46])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439]], device='cuda:0')
torch.Size([1, 47])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422]], device='cuda:0')
torch.Size([1, 48])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311]], device='cuda:0')
torch.Size([1, 49])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019]], device='cuda:0')
torch.Size([1, 50])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330]], device='cuda:0')
torch.Size([1, 51])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891]],
       device='cuda:0')
torch.Size([1, 52])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343]],
       device='cuda:0')
torch.Size([1, 53])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578]],
       device='cuda:0')
torch.Size([1, 54])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333]], device='cuda:0')
torch.Size([1, 55])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731]], device='cuda:0')
torch.Size([1, 56])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311]], device='cuda:0')
torch.Size([1, 57])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941]], device='cuda:0')
torch.Size([1, 58])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279]], device='cuda:0')
torch.Size([1, 59])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580]], device='cuda:0')
torch.Size([1, 60])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156]],
       device='cuda:0')
torch.Size([1, 61])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433]],
       device='cuda:0')
torch.Size([1, 62])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596]],
       device='cuda:0')
torch.Size([1, 63])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884]], device='cuda:0')
torch.Size([1, 64])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13]], device='cuda:0')
torch.Size([1, 65])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578]], device='cuda:0')
torch.Size([1, 66])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333]], device='cuda:0')
torch.Size([1, 67])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243]], device='cuda:0')
torch.Size([1, 68])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097]], device='cuda:0')
torch.Size([1, 69])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264]],
       device='cuda:0')
torch.Size([1, 70])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678]],
       device='cuda:0')
torch.Size([1, 71])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893]],
       device='cuda:0')
torch.Size([1, 72])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323]], device='cuda:0')
torch.Size([1, 73])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314]], device='cuda:0')
torch.Size([1, 74])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954]], device='cuda:0')
torch.Size([1, 75])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279]], device='cuda:0')
torch.Size([1, 76])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580]], device='cuda:0')
torch.Size([1, 77])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311]], device='cuda:0')
torch.Size([1, 84])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202]], device='cuda:0')
torch.Size([1, 86])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010]], device='cuda:0')
torch.Size([1, 87])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([78], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([82], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742]], device='cuda:0')
torch.Size([1, 141])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([119], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544]], device='cuda:0')
torch.Size([1, 156])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([125], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 161])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13]], device='cuda:0')
torch.Size([1, 165])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314]],
       device='cuda:0')
torch.Size([1, 169])
Total matched:  tensor([138], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596]], device='cuda:0')
torch.Size([1, 173])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742]], device='cuda:0')
torch.Size([1, 174])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([145], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([154], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203]],
       device='cuda:0')
torch.Size([1, 187])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 188])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544]],
       device='cuda:0')
torch.Size([1, 189])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([160], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([161], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333]], device='cuda:0')
torch.Size([1, 192])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 194])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([170], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333]], device='cuda:0')
torch.Size([1, 200])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314]], device='cuda:0')
torch.Size([1, 202])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580]],
       device='cuda:0')
torch.Size([1, 205])
Total matched:  tensor([176], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 206])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742]],
       device='cuda:0')
torch.Size([1, 207])
Total matched:  tensor([179], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264]], device='cuda:0')
torch.Size([1, 209])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307]], device='cuda:0')
torch.Size([1, 210])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307,  14812]], device='cuda:0')
torch.Size([1, 211])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307,  14812,     13]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 212])
Total matched:  tensor([185], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307,  14812,     13,    578]], device='cuda:0')
torch.Size([1, 213])
Total matched:  tensor([186], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307,  14812,     13,    578,  15580]],
       device='cuda:0')
torch.Size([1, 214])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307,  14812,     13,    578,  15580,   9731]],
       device='cuda:0')
torch.Size([1, 215])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307,  14812,     13,    578,  15580,   9731,    311]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307,  14812,     13,    578,  15580,   9731,    311,
           3351]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,  35862,   3956,    527,  17551,    704,   8272,    555,    264,
           5333,  75161,    264,  15580,     13,    578,   5333,  62726,    279,
          15580,    682,   2212,    433,    596,   2547,   1418,    279,  15580,
          57622,  11633,   1752,     13,   1364,   9731,    311,  15998,    279,
          15580,    323,    279,  15580,  11031,   1202,   2010,   1203,    323,
          13544,    439,    422,    311,   2019,    330,   9891,   3343,    578,
           5333,   9731,    311,  40941,    279,  15580,   3156,    433,    596,
           2884,     13,    578,   5333,   1243,   5097,    264,   2678,  16893,
            323,   8314,    954,    279,  15580,    596,  18742,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   2579,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202,   2010,   1203,    323,  13544,    323,    279,   5333,
           9731,    311,  40941,    279,  15580,     13,    578,   5333,   1243,
           8314,    954,    279,  15580,    596,  18742,    449,    264,   6437,
          14812,     13,    578,  15580,   9731,    311,   3351,   1202,   2010,
           1203,    323,  13544,    323,    279,   5333,   9731,    311,  40941,
            279,  15580,     13,    578,   5333,   1243,   8314,    954,    279,
          15580,    596,  18742,    449,    264,  14071,  14812,     13,    578,
          15580,   9731,    311,   3351,   1202,   2010,   1203,    323,  13544,
            323,    279,   5333,   9731,    311,  40941,    279,  15580,     13,
            578,   5333,   1243,   8314,    954,    279,  15580,    596,  18742,
            449,    264,   6307,  14812,     13,    578,  15580,   9731,    311,
           3351,   1202]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 218])
Total matched:  tensor([192], device='cuda:0', dtype=torch.int32)
Draft successes:  6
Final output:  Several products are laid out followed by a woman grooming a horse. The woman brushes the horse all around it's body while the horse lays motionless. she continues to brush the horse and the horse moves its head back and forth as if to say "yes". The woman continues to groom the horse until it's done. The woman then takes a small bottle and sprays the horse's fur. The horse continues to move its head back and forth and the woman continues to groom the horse. The woman then sprays the horse's fur with a red liquid. The horse continues to move its head back and forth and the woman continues to groom the horse. The woman then sprays the horse's fur with a blue liquid. The horse continues to move its head back and forth and the woman continues to groom the horse. The woman then sprays the horse's fur with a yellow liquid. The horse continues to move its head back and forth and the woman continues to groom the horse. The woman then sprays the horse's fur with a green liquid. The horse continues to move its
torch.Size([1, 218])

Current prompt:  [header] How to prepare a reed for a saxophone [title] Select your reed. [step] There are several manufactures of reeds and several different kinds that can be used. The first kind is the cane reeds.

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314]], device='cuda:0')
torch.Size([1, 51])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312]],
       device='cuda:0')
torch.Size([1, 52])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910]],
       device='cuda:0')
torch.Size([1, 53])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527]],
       device='cuda:0')
torch.Size([1, 54])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903]], device='cuda:0')
torch.Size([1, 55])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315]], device='cuda:0')
torch.Size([1, 56])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335]], device='cuda:0')
torch.Size([1, 57])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13]], device='cuda:0')
torch.Size([1, 58])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435]], device='cuda:0')
torch.Size([1, 59])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527]], device='cuda:0')
torch.Size([1, 60])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561]],
       device='cuda:0')
torch.Size([1, 61])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304]],
       device='cuda:0')
torch.Size([1, 62])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204]],
       device='cuda:0')
torch.Size([1, 63])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839]], device='cuda:0')
torch.Size([1, 64])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288]], device='cuda:0')
torch.Size([1, 65])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323]], device='cuda:0')
torch.Size([1, 66])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003]], device='cuda:0')
torch.Size([1, 67])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288]], device='cuda:0')
torch.Size([1, 68])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13]], device='cuda:0')
torch.Size([1, 69])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578]],
       device='cuda:0')
torch.Size([1, 70])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132]],
       device='cuda:0')
torch.Size([1, 71])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169]],
       device='cuda:0')
torch.Size([1, 72])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374]], device='cuda:0')
torch.Size([1, 73])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279]], device='cuda:0')
torch.Size([1, 74])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367]], device='cuda:0')
torch.Size([1, 75])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312]], device='cuda:0')
torch.Size([1, 76])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910]], device='cuda:0')
torch.Size([1, 77])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315]], device='cuda:0')
torch.Size([1, 84])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13]], device='cuda:0')
torch.Size([1, 86])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435]], device='cuda:0')
torch.Size([1, 87])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([78], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([82], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649]], device='cuda:0')
torch.Size([1, 141])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910]], device='cuda:0')
torch.Size([1, 156])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304]], device='cuda:0')
torch.Size([1, 165])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 169])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578]], device='cuda:0')
torch.Size([1, 173])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132]], device='cuda:0')
torch.Size([1, 174])
Total matched:  tensor([125], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([129], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 187])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466]],
       device='cuda:0')
torch.Size([1, 188])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13]],
       device='cuda:0')
torch.Size([1, 189])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561]], device='cuda:0')
torch.Size([1, 192])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([145], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 197])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13]], device='cuda:0')
torch.Size([1, 200])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([154], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948]], device='cuda:0')
torch.Size([1, 202])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279]],
       device='cuda:0')
torch.Size([1, 205])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501]],
       device='cuda:0')
torch.Size([1, 206])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312]],
       device='cuda:0')
torch.Size([1, 207])
Total matched:  tensor([160], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([161], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13]], device='cuda:0')
torch.Size([1, 209])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314]], device='cuda:0')
torch.Size([1, 210])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312]], device='cuda:0')
torch.Size([1, 211])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910]], device='cuda:0')
torch.Size([1, 212])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527]], device='cuda:0')
torch.Size([1, 213])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903]],
       device='cuda:0')
torch.Size([1, 214])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 215])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([170], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435]], device='cuda:0')
torch.Size([1, 218])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527]], device='cuda:0')
torch.Size([1, 219])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561]], device='cuda:0')
torch.Size([1, 220])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304]], device='cuda:0')
torch.Size([1, 221])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204]], device='cuda:0')
torch.Size([1, 222])
Total matched:  tensor([176], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839]],
       device='cuda:0')
torch.Size([1, 223])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288]],
       device='cuda:0')
torch.Size([1, 224])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 225])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003]], device='cuda:0')
torch.Size([1, 226])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288]], device='cuda:0')
torch.Size([1, 227])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13]], device='cuda:0')
torch.Size([1, 228])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13,    510]], device='cuda:0')
torch.Size([1, 229])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13,    510,   9710]], device='cuda:0')
torch.Size([1, 230])
Total matched:  tensor([185], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13,    510,   9710,     60]], device='cuda:0')
torch.Size([1, 231])
Total matched:  tensor([186], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13,    510,   9710,     60,   2684]],
       device='cuda:0')
torch.Size([1, 232])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13,    510,   9710,     60,   2684,    527]],
       device='cuda:0')
torch.Size([1, 233])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13,    510,   9710,     60,   2684,    527,   3892]],
       device='cuda:0')
torch.Size([1, 234])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13,    510,   9710,     60,   2684,    527,   3892,
          17032]], device='cuda:0')
torch.Size([1, 235])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,  10772,    264,    312,
            291,    369,    264,  64108,  78303,    510,   2150,     60,   8593,
            701,    312,    291,     13,    510,   9710,     60,   2684,    527,
           3892,  70901,    315,    312,   6910,    323,   3892,   2204,  13124,
            430,    649,    387,   1511,     13,    578,   1176,   3169,    374,
            279,  63335,    312,   6910,     13,   4314,    312,   6910,    527,
           1903,    315,  63335,     13,   2435,    527,   2561,    304,   2204,
          26839,    288,    323,  72003,    288,     13,    578,   2132,   3169,
            374,    279,  28367,    312,   6910,     13,   4314,    312,   6910,
            527,   1903,    315,  12466,     13,   2435,    527,   2561,    304,
           2204,  26839,    288,    323,  72003,    288,     13,    578,   4948,
           3169,    374,    279,   9501,    312,   6910,     13,   4314,    312,
           6910,    527,   1903,    315,   9501,     13,   2435,    527,   2561,
            304,   2204,  26839,    288,    323,  72003,    288,     13,    510,
           9710,     60,   2684,    527,   3892,  17032,    315,    312,   6910,
            323,   3892,   2204,  13124,    430,    649,    387,   1511,     13,
            578,   1176,   3169,    374,    279,  63335,    312,   6910,     13,
           4314,    312,   6910,    527,   1903,    315,  63335,     13,   2435,
            527,   2561,    304,   2204,  26839,    288,    323,  72003,    288,
             13,    578,   2132,   3169,    374,    279,  28367,    312,   6910,
             13,   4314,    312,   6910,    527,   1903,    315,  12466,     13,
           2435,    527,   2561,    304,   2204,  26839,    288,    323,  72003,
            288,     13,    578,   4948,   3169,    374,    279,   9501,    312,
           6910,     13,   4314,    312,   6910,    527,   1903,    315,   9501,
             13,   2435,    527,   2561,    304,   2204,  26839,    288,    323,
          72003,    288,     13,    510,   9710,     60,   2684,    527,   3892,
          17032,    315]], device='cuda:0')
torch.Size([1, 236])
Total matched:  tensor([191], device='cuda:0', dtype=torch.int32)
Draft successes:  5
Final output:  [header] How to prepare a reed for a saxophone [title] Select your reed. [step] There are several manufactures of reeds and several different kinds that can be used. The first kind is the cane reeds. These reeds are made of cane. They are available in different thicknesses and hardnesses. The second kind is the synthetic reeds. These reeds are made of plastic. They are available in different thicknesses and hardnesses. The third kind is the metal reeds. These reeds are made of metal. They are available in different thicknesses and hardnesses. [step] There are several manufacturers of reeds and several different kinds that can be used. The first kind is the cane reeds. These reeds are made of cane. They are available in different thicknesses and hardnesses. The second kind is the synthetic reeds. These reeds are made of plastic. They are available in different thicknesses and hardnesses. The third kind is the metal reeds. These reeds are made of metal. They are available in different thicknesses and hardnesses. [step] There are several manufacturers of
torch.Size([1, 236])

Current prompt:  [header] How to improve half life 2 deathmatch skill [title] Find a good server, a server with a low ping is a must for getting better. [title] Play with experienced players. [step] Players that are part of a clan are often good.

correct predictions:  tensor([0., 1., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510]], device='cuda:0')
torch.Size([1, 58])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150]], device='cuda:0')
torch.Size([1, 59])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 60])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281]],
       device='cuda:0')
torch.Size([1, 61])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311]],
       device='cuda:0')
torch.Size([1, 62])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373]],
       device='cuda:0')
torch.Size([1, 63])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370]], device='cuda:0')
torch.Size([1, 64])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13]], device='cuda:0')
torch.Size([1, 65])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510]], device='cuda:0')
torch.Size([1, 66])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150]], device='cuda:0')
torch.Size([1, 67])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 68])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281]], device='cuda:0')
torch.Size([1, 69])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311]],
       device='cuda:0')
torch.Size([1, 70])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373]],
       device='cuda:0')
torch.Size([1, 71])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279]],
       device='cuda:0')
torch.Size([1, 72])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472]], device='cuda:0')
torch.Size([1, 73])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11]], device='cuda:0')
torch.Size([1, 74])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499]], device='cuda:0')
torch.Size([1, 75])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649]], device='cuda:0')
torch.Size([1, 76])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505]], device='cuda:0')
torch.Size([1, 77])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279]], device='cuda:0')
torch.Size([1, 84])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300]], device='cuda:0')
torch.Size([1, 86])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311]], device='cuda:0')
torch.Size([1, 87])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 94])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 99])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 118])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([78], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([82], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 141])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 146])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 156])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 165])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 169])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447]], device='cuda:0')
torch.Size([1, 173])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921]], device='cuda:0')
torch.Size([1, 174])
Total matched:  tensor([125], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([129], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 187])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005]],
       device='cuda:0')
torch.Size([1, 188])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279]],
       device='cuda:0')
torch.Size([1, 189])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 1., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510]], device='cuda:0')
torch.Size([1, 192])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([145], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304]], device='cuda:0')
torch.Size([1, 200])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648]], device='cuda:0')
torch.Size([1, 202])
Total matched:  tensor([154], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510]],
       device='cuda:0')
torch.Size([1, 205])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150]],
       device='cuda:0')
torch.Size([1, 206])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60]],
       device='cuda:0')
torch.Size([1, 207])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([160], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 209])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005]], device='cuda:0')
torch.Size([1, 210])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279]], device='cuda:0')
torch.Size([1, 211])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381]], device='cuda:0')
torch.Size([1, 212])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273]], device='cuda:0')
torch.Size([1, 213])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13]],
       device='cuda:0')
torch.Size([1, 214])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510]],
       device='cuda:0')
torch.Size([1, 215])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([170], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710]], device='cuda:0')
torch.Size([1, 218])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273]], device='cuda:0')
torch.Size([1, 219])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82]], device='cuda:0')
torch.Size([1, 220])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527]], device='cuda:0')
torch.Size([1, 221])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633]], device='cuda:0')
torch.Size([1, 222])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505]],
       device='cuda:0')
torch.Size([1, 223])
Total matched:  tensor([176], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304]],
       device='cuda:0')
torch.Size([1, 224])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128]],
       device='cuda:0')
torch.Size([1, 225])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648]], device='cuda:0')
torch.Size([1, 226])
Total matched:  tensor([179], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481]], device='cuda:0')
torch.Size([1, 227])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13]], device='cuda:0')
torch.Size([1, 228])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510]], device='cuda:0')
torch.Size([1, 229])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510,   2150]], device='cuda:0')
torch.Size([1, 230])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 231])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510,   2150,     60,  15281]],
       device='cuda:0')
torch.Size([1, 232])
Total matched:  tensor([185], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510,   2150,     60,  15281,    311]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 233])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510,   2150,     60,  15281,    311,   1005]],
       device='cuda:0')
torch.Size([1, 234])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510,   2150,     60,  15281,    311,   1005,
            279]], device='cuda:0')
torch.Size([1, 235])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510,   2150,     60,  15281,    311,   1005,
            279,  16603]], device='cuda:0')
torch.Size([1, 236])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   7417,   4376,   2324,
            220,     17,   4648,   6481,  10151,    510,   2150,     60,   7531,
            264,   1695,   3622,     11,    264,   3622,    449,    264,   3428,
          31098,    374,    264,   2011,    369,   3794,   2731,     13,    510,
           2150,     60,   7199,    449,  10534,   4311,     13,    510,   9710,
             60,  25640,    430,    527,    961,    315,    264,  39562,    527,
           3629,   1695,     13,    510,   2150,     60,  15281,    311,   1373,
          14370,     13,    510,   2150,     60,  15281,    311,   1373,    279,
           2472,     11,    499,    649,   1505,    279,   1888,  19300,    311,
          10477,    323,    279,   1888,  19300,    311,   3440,     13,    510,
           2150,     60,  15281,    311,   1005,    279,   2890,   3854,     13,
            510,   2150,     60,   6401,  31406,    527,   5505,     11,   5423,
            304,   2128,   4648,   6481,     13,    510,   2150,     60,  15281,
            311,   1005,    279,  63382,  29232,     13,    510,   2150,     60,
          76154,  46470,    527,   1633,   5505,    304,   2128,   4648,   6481,
             13,    510,   2150,     60,  15281,    311,   1005,    279,  25294,
          47549,     13,    510,   2150,     60,  40318,   7195,    388,    527,
           1633,   5505,    304,   2128,   4648,   6481,     13,    510,   2150,
             60,  15281,    311,   1005,    279,  52348,     13,    510,   2150,
             60,  33447,  52921,    527,   1633,   5505,    304,   2128,   4648,
           6481,     13,    510,   2150,     60,  15281,    311,   1005,    279,
          67681,     13,    510,   2150,     60,  39224,   3536,    527,   1633,
           5505,    304,   2128,   4648,   6481,     13,    510,   2150,     60,
          15281,    311,   1005,    279,   8381,  28273,     13,    510,   2150,
             60,  17710,  28273,     82,    527,   1633,   5505,    304,   2128,
           4648,   6481,     13,    510,   2150,     60,  15281,    311,   1005,
            279,  16603,  67681]], device='cuda:0')
torch.Size([1, 237])
Total matched:  tensor([191], device='cuda:0', dtype=torch.int32)
Draft successes:  11
Final output:  [header] How to improve half life 2 deathmatch skill [title] Find a good server, a server with a low ping is a must for getting better. [title] Play with experienced players. [step] Players that are part of a clan are often good. [title] Learn to read maps. [title] Learn to read the map, you can find the best spots to hide and the best spots to attack. [title] Learn to use the health pack. [title] Health packs are useful, especially in team deathmatch. [title] Learn to use the sniper rifle. [title] Sniper rifles are very useful in team deathmatch. [title] Learn to use the rocket launcher. [title] Rocket launchers are very useful in team deathmatch. [title] Learn to use the shotgun. [title] Shotguns are very useful in team deathmatch. [title] Learn to use the grenade. [title] Grenades are very useful in team deathmatch. [title] Learn to use the flashbang. [title] Flashbangs are very useful in team deathmatch. [title] Learn to use the smoke grenade
torch.Size([1, 237])

Current prompt:  [header] How to open master locks [title] Know that bumping a lock is the best method. [title] Procure or make a bump key. [step] Procuring a bump key involves asking for a locksmith to make a 999 key (where all the valleys are cut to the maximum depth.

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578]], device='cuda:0')
torch.Size([1, 66])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822]], device='cuda:0')
torch.Size([1, 67])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527]], device='cuda:0')
torch.Size([1, 68])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264]], device='cuda:0')
torch.Size([1, 69])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230]],
       device='cuda:0')
torch.Size([1, 70])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211]],
       device='cuda:0')
torch.Size([1, 71])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323]],
       device='cuda:0')
torch.Size([1, 72])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404]], device='cuda:0')
torch.Size([1, 73])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323]], device='cuda:0')
torch.Size([1, 74])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527]], device='cuda:0')
torch.Size([1, 75])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193]], device='cuda:0')
torch.Size([1, 76])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018]], device='cuda:0')
torch.Size([1, 77])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60]], device='cuda:0')
torch.Size([1, 84])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264]], device='cuda:0')
torch.Size([1, 86])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675]], device='cuda:0')
torch.Size([1, 87])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163]], device='cuda:0')
torch.Size([1, 141])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([78], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([82], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710]], device='cuda:0')
torch.Size([1, 156])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150]], device='cuda:0')
torch.Size([1, 165])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311]],
       device='cuda:0')
torch.Size([1, 169])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401]], device='cuda:0')
torch.Size([1, 173])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304]], device='cuda:0')
torch.Size([1, 174])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([119], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649]],
       device='cuda:0')
torch.Size([1, 187])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387]],
       device='cuda:0')
torch.Size([1, 188])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511]],
       device='cuda:0')
torch.Size([1, 189])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([125], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904]], device='cuda:0')
torch.Size([1, 192])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([129], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150]], device='cuda:0')
torch.Size([1, 200])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521]], device='cuda:0')
torch.Size([1, 202])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([138], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675]],
       device='cuda:0')
torch.Size([1, 205])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401]],
       device='cuda:0')
torch.Size([1, 206])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649]],
       device='cuda:0')
torch.Size([1, 207])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511]], device='cuda:0')
torch.Size([1, 209])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 210])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825]], device='cuda:0')
torch.Size([1, 211])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904]], device='cuda:0')
torch.Size([1, 212])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409]], device='cuda:0')
torch.Size([1, 213])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 215])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([154], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13]], device='cuda:0')
torch.Size([1, 218])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510]], device='cuda:0')
torch.Size([1, 219])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150]], device='cuda:0')
torch.Size([1, 220])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60]], device='cuda:0')
torch.Size([1, 221])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521]], device='cuda:0')
torch.Size([1, 222])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 224])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675]],
       device='cuda:0')
torch.Size([1, 225])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401]], device='cuda:0')
torch.Size([1, 226])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649]], device='cuda:0')
torch.Size([1, 227])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 228])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511]], device='cuda:0')
torch.Size([1, 229])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 230])
Total matched:  tensor([170], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825]], device='cuda:0')
torch.Size([1, 231])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904]],
       device='cuda:0')
torch.Size([1, 232])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409]],
       device='cuda:0')
torch.Size([1, 233])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 236])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401]], device='cuda:0')
torch.Size([1, 237])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 238])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13,    510]], device='cuda:0')
torch.Size([1, 239])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13,    510,   2150]], device='cuda:0')
torch.Size([1, 240])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13,    510,   2150,     60]],
       device='cuda:0')
torch.Size([1, 241])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13,    510,   2150,     60,  14521]],
       device='cuda:0')
torch.Size([1, 242])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13,    510,   2150,     60,  14521,    430,
            264]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 244])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13,    510,   2150,     60,  14521,    430,
            264,  28675]], device='cuda:0')
torch.Size([1, 245])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13,    510,   2150,     60,  14521,    430,
            264,  28675,   1401]], device='cuda:0')
torch.Size([1, 246])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1825,   7491,  32776,
            510,   2150,     60,  14521,    430,  28675,    287,    264,   5409,
            374,    279,   1888,   1749,     13,    510,   2150,     60,  42187,
            554,    477,   1304,    264,  28675,   1401,     13,    510,   9710,
             60,  42187,   1711,    264,  28675,   1401,  18065,  10371,    369,
            264,  99060,    311,   1304,    264,    220,   5500,   1401,    320,
           2940,    682,    279,  86497,    527,   4018,    311,    279,   7340,
           8149,     13,    578,  65822,    527,    264,   3230,   6211,    323,
           1404,    323,    527,   1193,   4018,    389,   7491,   7039,     13,
            510,   9710,     60,  25274,    264,  28675,   1401,  18065,    264,
           1920,    430,    374,   7633,    304,    279,   2835,   3485,     13,
            510,   9710,     60,   9843,    499,    617,    264,  28675,   1401,
             11,    499,    649,  28675,    279,   5409,     13,    510,   9710,
             60,    578,  28675,   1401,    374,  22306,   1139,    279,   1401,
          31520,    323,   1243,   6656,     13,    510,   9710,     60,    578,
           1401,    374,  79932,    311,    279,   2163,     11,   1314,     11,
            323,    709,    323,   1523,    311,   1304,    279,   5409,   1825,
             13,    510,   9710,     60,    578,   5409,    374,   1457,   1825,
             13,    510,   2150,     60,   7557,   2771,    311,   2567,    701,
          28675,   1401,    304,    264,   6220,   2035,     13,    510,   2150,
             60,  14521,    430,    264,  28675,   1401,    649,    387,   1511,
            311,   1825,    904,   5409,    449,    264,   7491,   1401,     13,
            510,   2150,     60,  14521,    430,    264,  28675,   1401,    649,
            387,   1511,    311,   1825,    904,   5409,    449,    264,   7491,
           1401,     13,    510,   2150,     60,  14521,    430,    264,  28675,
           1401,    649,    387,   1511,    311,   1825,    904,   5409,    449,
            264,   7491,   1401,     13,    510,   2150,     60,  14521,    430,
            264,  28675,   1401,    649,    387]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 248])
Total matched:  tensor([192], device='cuda:0', dtype=torch.int32)
Draft successes:  9
Final output:  [header] How to open master locks [title] Know that bumping a lock is the best method. [title] Procure or make a bump key. [step] Procuring a bump key involves asking for a locksmith to make a 999 key (where all the valleys are cut to the maximum depth. The bumps are a specific shape and size and are only cut on master keys. [step] Making a bump key involves a process that is described in the video above. [step] Once you have a bump key, you can bump the lock. [step] The bump key is inserted into the keyhole and then turned. [step] The key is bumped to the left, right, and up and down to make the lock open. [step] The lock is now open. [title] Make sure to keep your bump key in a safe place. [title] Know that a bump key can be used to open any lock with a master key. [title] Know that a bump key can be used to open any lock with a master key. [title] Know that a bump key can be used to open any lock with a master key. [title] Know that a bump key can be
torch.Size([1, 248])

Current prompt:  [header] How to prevent getting spyware [title] Avoid downloading free programs. [step] When you see a program that you may find useful and is free, do not just download it. Make sure it is from a reliable source, searching the web for reviews and opinions about the software.

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442]],
       device='cuda:0')
torch.Size([1, 62])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499]],
       device='cuda:0')
torch.Size([1, 63])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527]], device='cuda:0')
torch.Size([1, 64])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539]], device='cuda:0')
torch.Size([1, 65])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771]], device='cuda:0')
torch.Size([1, 66])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11]], device='cuda:0')
torch.Size([1, 67])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499]], device='cuda:0')
torch.Size([1, 68])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649]], device='cuda:0')
torch.Size([1, 69])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744]],
       device='cuda:0')
torch.Size([1, 70])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232]],
       device='cuda:0')
torch.Size([1, 71])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264]],
       device='cuda:0')
torch.Size([1, 72])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269]], device='cuda:0')
torch.Size([1, 73])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373]], device='cuda:0')
torch.Size([1, 74])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315]], device='cuda:0')
torch.Size([1, 75])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279]], device='cuda:0')
torch.Size([1, 76])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241]], device='cuda:0')
torch.Size([1, 77])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433]], device='cuda:0')
torch.Size([1, 84])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539]], device='cuda:0')
torch.Size([1, 86])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 87])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 138])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505]], device='cuda:0')
torch.Size([1, 141])
Total matched:  tensor([82], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 156])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499]], device='cuda:0')
torch.Size([1, 165])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13]],
       device='cuda:0')
torch.Size([1, 169])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234]], device='cuda:0')
torch.Size([1, 173])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 174])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([119], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 182])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([129], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13]],
       device='cuda:0')
torch.Size([1, 187])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510]],
       device='cuda:0')
torch.Size([1, 188])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 189])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 192])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([138], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 200])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656]], device='cuda:0')
torch.Size([1, 202])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13]],
       device='cuda:0')
torch.Size([1, 205])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510]],
       device='cuda:0')
torch.Size([1, 206])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 207])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([154], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234]], device='cuda:0')
torch.Size([1, 209])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 210])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232]], device='cuda:0')
torch.Size([1, 211])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626]], device='cuda:0')
torch.Size([1, 212])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505]], device='cuda:0')
torch.Size([1, 213])
Total matched:  tensor([160], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613]],
       device='cuda:0')
torch.Size([1, 214])
Total matched:  tensor([161], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779]],
       device='cuda:0')
torch.Size([1, 215])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 218])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499]], device='cuda:0')
torch.Size([1, 219])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656]], device='cuda:0')
torch.Size([1, 220])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539]], device='cuda:0')
torch.Size([1, 221])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440]], device='cuda:0')
torch.Size([1, 222])
Total matched:  tensor([170], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13]],
       device='cuda:0')
torch.Size([1, 223])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510]],
       device='cuda:0')
torch.Size([1, 224])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 225])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60]], device='cuda:0')
torch.Size([1, 226])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234]], device='cuda:0')
torch.Size([1, 227])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 228])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825]], device='cuda:0')
torch.Size([1, 229])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626]], device='cuda:0')
torch.Size([1, 230])
Total matched:  tensor([179], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505]], device='cuda:0')
torch.Size([1, 231])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613]],
       device='cuda:0')
torch.Size([1, 232])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779]],
       device='cuda:0')
torch.Size([1, 233])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505]],
       device='cuda:0')
torch.Size([1, 234])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274]], device='cuda:0')
torch.Size([1, 235])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 236])
Total matched:  tensor([186], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499]], device='cuda:0')
torch.Size([1, 237])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656]], device='cuda:0')
torch.Size([1, 238])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539]], device='cuda:0')
torch.Size([1, 239])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440]], device='cuda:0')
torch.Size([1, 240])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   5471,   3794,  21930,
           1698,    510,   2150,     60,  35106,  33577,   1949,   7620,     13,
            510,   9710,     60,   3277,    499,   1518,    264,   2068,    430,
            499,   1253,   1505,   5505,    323,    374,   1949,     11,    656,
            539,   1120,   4232,    433,     13,   7557,   2771,    433,    374,
            505,    264,  15062,   2592,     11,  15389,    279,   3566,    369,
           8544,    323,  18463,    922,    279,   3241,     13,   1442,    499,
            527,    539,   2771,     11,    499,    649,   2744,   4232,    264,
           9269,   2373,    315,    279,   3241,    323,   1243,  10491,   3508,
            311,   3780,    433,    477,    539,     13,    510,   9710,     60,
           3234,    539,   1825,   2613,  34779,    505,   9987,   3708,    388,
             13,    510,   9710,     60,   3234,    539,   4232,   3626,    505,
           3566,   6732,    430,    499,    656,    539,   7095,     13,    510,
           9710,     60,   3234,    539,   1825,  34779,    505,  14633,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   4232,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13,    510,   9710,
             60,   3234,    539,   1825,   3626,    505,   2613,  34779,    505,
           1274,    430,    499,    656,    539,   1440,     13]],
       device='cuda:0')
torch.Size([1, 241])
Total matched:  tensor([191], device='cuda:0', dtype=torch.int32)
Draft successes:  11
Final output:  [header] How to prevent getting spyware [title] Avoid downloading free programs. [step] When you see a program that you may find useful and is free, do not just download it. Make sure it is from a reliable source, searching the web for reviews and opinions about the software. If you are not sure, you can always download a trial version of the software and then decide whether to buy it or not. [step] Do not open email attachments from unknown senders. [step] Do not download files from web sites that you do not trust. [step] Do not open attachments from emails from people that you do not know. [step] Do not download files from email attachments from people that you do not know. [step] Do not download files from email attachments from people that you do not know. [step] Do not open files from email attachments from people that you do not know. [step] Do not open files from email attachments from people that you do not know. [step] Do not download files from email attachments from people that you do not know. [step] Do not open files from email attachments from people that you do not know.
torch.Size([1, 241])

Current prompt:  [header] How to make soy sauce [title] Wash and sort 4 cups (950 ml) of soybeans. [step] You can get soybeans (or edamame) from some grocery stores, although you may need to visit a store specializing in asian produce. [substeps] Make sure you remove the soybeans from their pods before you soak them.

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510]], device='cuda:0')
torch.Size([1, 78])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839]], device='cuda:0')
torch.Size([1, 84])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402]], device='cuda:0')
torch.Size([1, 86])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304]], device='cuda:0')
torch.Size([1, 87])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 114])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485]], device='cuda:0')
torch.Size([1, 141])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 147])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([78], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430]], device='cuda:0')
torch.Size([1, 156])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([82], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279]], device='cuda:0')
torch.Size([1, 165])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235]],
       device='cuda:0')
torch.Size([1, 169])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449]], device='cuda:0')
torch.Size([1, 173])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264]], device='cuda:0')
torch.Size([1, 174])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510]],
       device='cuda:0')
torch.Size([1, 187])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008]],
       device='cuda:0')
torch.Size([1, 188])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 189])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279]], device='cuda:0')
torch.Size([1, 192])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([119], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([125], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449]], device='cuda:0')
torch.Size([1, 200])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19]], device='cuda:0')
torch.Size([1, 202])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([129], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862]],
       device='cuda:0')
torch.Size([1, 205])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116]],
       device='cuda:0')
torch.Size([1, 206])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8]],
       device='cuda:0')
torch.Size([1, 207])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878]], device='cuda:0')
torch.Size([1, 209])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090]], device='cuda:0')
torch.Size([1, 210])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13]], device='cuda:0')
torch.Size([1, 211])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510]], device='cuda:0')
torch.Size([1, 212])
Total matched:  tensor([138], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008]], device='cuda:0')
torch.Size([1, 213])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 214])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60]],
       device='cuda:0')
torch.Size([1, 215])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090]], device='cuda:0')
torch.Size([1, 218])
Total matched:  tensor([145], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311]], device='cuda:0')
torch.Size([1, 219])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264]], device='cuda:0')
torch.Size([1, 220])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790]], device='cuda:0')
torch.Size([1, 221])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323]], device='cuda:0')
torch.Size([1, 222])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394]],
       device='cuda:0')
torch.Size([1, 223])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279]],
       device='cuda:0')
torch.Size([1, 224])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994]],
       device='cuda:0')
torch.Size([1, 225])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369]], device='cuda:0')
torch.Size([1, 226])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220]], device='cuda:0')
torch.Size([1, 227])
Total matched:  tensor([154], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508]], device='cuda:0')
torch.Size([1, 228])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520]], device='cuda:0')
torch.Size([1, 229])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13]], device='cuda:0')
torch.Size([1, 230])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510]], device='cuda:0')
torch.Size([1, 231])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008]],
       device='cuda:0')
torch.Size([1, 232])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 233])
Total matched:  tensor([161], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60]],
       device='cuda:0')
torch.Size([1, 234])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268]], device='cuda:0')
torch.Size([1, 235])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022]], device='cuda:0')
torch.Size([1, 236])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279]], device='cuda:0')
torch.Size([1, 237])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798]], device='cuda:0')
torch.Size([1, 238])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323]], device='cuda:0')
torch.Size([1, 239])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095]], device='cuda:0')
torch.Size([1, 240])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279]],
       device='cuda:0')
torch.Size([1, 241])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994]],
       device='cuda:0')
torch.Size([1, 242])
Total matched:  tensor([170], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503]],
       device='cuda:0')
torch.Size([1, 243])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304]], device='cuda:0')
torch.Size([1, 244])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279]], device='cuda:0')
torch.Size([1, 245])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419]], device='cuda:0')
torch.Size([1, 246])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369]], device='cuda:0')
torch.Size([1, 247])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220]], device='cuda:0')
torch.Size([1, 248])
Total matched:  tensor([176], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605]], device='cuda:0')
torch.Size([1, 249])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520]],
       device='cuda:0')
torch.Size([1, 250])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13]],
       device='cuda:0')
torch.Size([1, 251])
Total matched:  tensor([179], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510]],
       device='cuda:0')
torch.Size([1, 252])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710]], device='cuda:0')
torch.Size([1, 253])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60]], device='cuda:0')
torch.Size([1, 254])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368]], device='cuda:0')
torch.Size([1, 255])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368,    279]], device='cuda:0')
torch.Size([1, 256])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368,    279,  27994]], device='cuda:0')
torch.Size([1, 257])
Total matched:  tensor([185], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368,    279,  27994,    323]], device='cuda:0')
torch.Size([1, 258])
Total matched:  tensor([186], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368,    279,  27994,    323,  74341]],
       device='cuda:0')
torch.Size([1, 259])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368,    279,  27994,    323,  74341,   1124]],
       device='cuda:0')
torch.Size([1, 260])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368,    279,  27994,    323,  74341,   1124,     13]],
       device='cuda:0')
torch.Size([1, 261])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368,    279,  27994,    323,  74341,   1124,     13,
            510]], device='cuda:0')
torch.Size([1, 262])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1304,  29839,  19737,
            510,   2150,     60,   6113,    323,   3460,    220,     19,  26446,
            320,  15862,  16116,      8,    315,  29839,  28440,     13,    510,
           9710,     60,   1472,    649,    636,  29839,  28440,    320,    269,
           1608,    309,    373,      8,    505,   1063,  30687,  10756,     11,
           8051,    499,   1253,   1205,    311,   4034,    264,   3637,  58394,
            304,  36725,   8356,     13,    510,   2008,  25047,     60,   7557,
           2771,    499,   4148,    279,  29839,  28440,    505,    872,  55687,
           1603,    499,  61792,   1124,     13,    510,   9710,     60,   2100,
            587,    279,  29839,  28440,  25402,    304,    264,   3544,  19763,
            477,   3419,     13,    510,   2008,  25047,     60,  18230,    279,
          27994,    449,    220,     18,  26446,    320,   7007,  16116,      8,
            315,   3090,     13,    510,   2008,  25047,     60,   1442,    499,
            649,     11,   1005,    264,   3419,    430,    690,   2187,    279,
          27994,    311,  61792,    304,   3090,    520,   3325,    220,     17,
          15271,    320,     20,  10166,      8,   3485,    279,  27994,     13,
            510,   2008,  25047,     60,   1442,    499,   1541,    956,    617,
            264,   3419,    430,    690,   2187,    369,    420,     11,    499,
            649,   3504,    279,  19763,    449,    264,  12235,    477,    264,
          19763,    449,    264,  27431,     13,    510,   9710,     60,  62368,
            279,  27994,    323,  74341,   1124,     13,    510,   2008,  25047,
             60,  10435,    279,  27994,    304,    264,   3419,    323,   3504,
           1124,    449,    220,     19,  26446,    320,  15862,  16116,      8,
            315,   7878,   3090,     13,    510,   2008,  25047,     60,  40224,
            279,   3090,    311,    264,  44790,    323,   4394,    279,  27994,
            369,    220,    508,   4520,     13,    510,   2008,  25047,     60,
          12268,   1022,    279,   8798,    323,   1095,    279,  27994,   2503,
            304,    279,   3419,    369,    220,    605,   4520,     13,    510,
           9710,     60,  62368,    279,  27994,    323,  74341,   1124,     13,
            510,   2008]], device='cuda:0')
torch.Size([1, 263])
Total matched:  tensor([191], device='cuda:0', dtype=torch.int32)
Draft successes:  5
Final output:  [header] How to make soy sauce [title] Wash and sort 4 cups (950 ml) of soybeans. [step] You can get soybeans (or edamame) from some grocery stores, although you may need to visit a store specializing in asian produce. [substeps] Make sure you remove the soybeans from their pods before you soak them. [step] Soak the soybeans overnight in a large bowl or pot. [substeps] Cover the beans with 3 cups (700 ml) of water. [substeps] If you can, use a pot that will allow the beans to soak in water at least 2 inches (5 cm) above the beans. [substeps] If you don't have a pot that will allow for this, you can cover the bowl with a plate or a bowl with a lid. [step] Drain the beans and rinse them. [substeps] Put the beans in a pot and cover them with 4 cups (950 ml) of fresh water. [substeps] Bring the water to a boil and cook the beans for 20 minutes. [substeps] Turn off the heat and let the beans sit in the pot for 10 minutes. [step] Drain the beans and rinse them. [sub
torch.Size([1, 263])

Current prompt:  [header] How to find balance in your life [title] Schedule in down-time and breaks. [step] This may seem odd at first to actually block out time to not do anything, but it will help make sure you actually take a break. Set an alarm if you have to that reminds you that the break time is coming up and take the break when it comes up.

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510]],
       device='cuda:0')
torch.Size([1, 79])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 80])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60]],
       device='cuda:0')
torch.Size([1, 81])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115]], device='cuda:0')
torch.Size([1, 82])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253]], device='cuda:0')
torch.Size([1, 83])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 84])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535]], device='cuda:0')
torch.Size([1, 85])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 86])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176]], device='cuda:0')
torch.Size([1, 87])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311]],
       device='cuda:0')
torch.Size([1, 88])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604]],
       device='cuda:0')
torch.Size([1, 89])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565]],
       device='cuda:0')
torch.Size([1, 90])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704]], device='cuda:0')
torch.Size([1, 91])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892]], device='cuda:0')
torch.Size([1, 92])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 100])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 107])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 117])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 121])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 127])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 130])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 135])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 141])
Total matched:  tensor([73], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 143])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 145])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 150])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 157])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 166])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 168])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035]],
       device='cuda:0')
torch.Size([1, 169])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 170])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 174])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 179])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([121], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([122], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 184])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 1., 1.], device='cuda:0')
Matched tokens:  8
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 192])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 193])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([138], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 198])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 200])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 202])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 207])
Total matched:  tensor([155], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656]], device='cuda:0')
torch.Size([1, 209])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205]], device='cuda:0')
torch.Size([1, 210])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11]], device='cuda:0')
torch.Size([1, 211])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 214])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520]],
       device='cuda:0')
torch.Size([1, 215])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499]], device='cuda:0')
torch.Size([1, 218])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604]], device='cuda:0')
torch.Size([1, 219])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935]], device='cuda:0')
torch.Size([1, 220])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  4
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 223])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638]],
       device='cuda:0')
torch.Size([1, 224])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 225])
Total matched:  tensor([176], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035]], device='cuda:0')
torch.Size([1, 226])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 1., 1., 1., 0., 1.], device='cuda:0')
Matched tokens:  6
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 231])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 1., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710]],
       device='cuda:0')
torch.Size([1, 232])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499]],
       device='cuda:0')
torch.Size([1, 233])
Total matched:  tensor([185], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430]],
       device='cuda:0')
torch.Size([1, 234])
Total matched:  tensor([186], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 236])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892]], device='cuda:0')
torch.Size([1, 237])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   1505,   8335,    304,
            701,   2324,    510,   2150,     60,  24416,    304,   1523,   7394,
            323,  18808,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374,   5108,    709,    323,   1935,    279,
           1464,    994,    433,   4131,    709,     13,    510,   9710,     60,
           1115,   1253,   2873,  10535,    520,   1176,    311,   3604,   2565,
            704,    892,    311,    539,    656,   4205,     11,    719,    433,
            690,   1520,   1304,   2771,    499,   3604,   1935,    264,   1464,
             13,   2638,    459,  17035,    422,    499,    617,    311,    430,
          35710,    499,    430,    279,   1464,    892,    374,   5108,    709,
            323,   1935,    279,   1464,    994,    433,   4131,    709,     13,
            510,   9710,     60,   1115,   1253,   2873,  10535,    520,   1176,
            311,   3604,   2565,    704,    892,    311,    539,    656,   4205,
             11,    719,    433,    690,   1520,   1304,   2771,    499,   3604,
           1935,    264,   1464,     13,   2638,    459,  17035,    422,    499,
            617,    311,    430,  35710,    499,    430,    279,   1464,    892,
            374,   5108,    709,    323,   1935,    279,   1464,    994,    433,
           4131,    709,     13,    510,   9710,     60,   1115,   1253,   2873,
          10535,    520,   1176,    311,   3604,   2565,    704,    892,    311,
            539,    656,   4205,     11,    719,    433,    690,   1520,   1304,
           2771,    499,   3604,   1935,    264,   1464,     13,   2638,    459,
          17035,    422,    499,    617,    311,    430,  35710,    499,    430,
            279,   1464,    892,    374]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 238])
Total matched:  tensor([192], device='cuda:0', dtype=torch.int32)
Draft successes:  32
Final output:  [header] How to find balance in your life [title] Schedule in down-time and breaks. [step] This may seem odd at first to actually block out time to not do anything, but it will help make sure you actually take a break. Set an alarm if you have to that reminds you that the break time is coming up and take the break when it comes up. [step] This may seem odd at first to actually block out time to not do anything, but it will help make sure you actually take a break. Set an alarm if you have to that reminds you that the break time is coming up and take the break when it comes up. [step] This may seem odd at first to actually block out time to not do anything, but it will help make sure you actually take a break. Set an alarm if you have to that reminds you that the break time is coming up and take the break when it comes up. [step] This may seem odd at first to actually block out time to not do anything, but it will help make sure you actually take a break. Set an alarm if you have to that reminds you that the break time is
torch.Size([1, 238])

Current prompt:  [header] How to obtain small business web hosting [title] Meet with your marketing team to discuss your budget and what features your website will need. [step] For example, all websites should include a home page, contact page and technical support; however, others need email addresses, shopping carts, content management system, web analytics and blogs. Create a list of everything you need from a website before looking around, so you have firm parameters in mind.

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510]], device='cuda:0')
torch.Size([1, 93])
Total matched:  tensor([1], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710]], device='cuda:0')
torch.Size([1, 94])
Total matched:  tensor([2], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60]], device='cuda:0')
torch.Size([1, 95])
Total matched:  tensor([3], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472]], device='cuda:0')
torch.Size([1, 96])
Total matched:  tensor([4], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649]],
       device='cuda:0')
torch.Size([1, 97])
Total matched:  tensor([5], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212]],
       device='cuda:0')
torch.Size([1, 98])
Total matched:  tensor([6], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555]],
       device='cuda:0')
torch.Size([1, 99])
Total matched:  tensor([7], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389]], device='cuda:0')
torch.Size([1, 100])
Total matched:  tensor([8], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369]], device='cuda:0')
torch.Size([1, 101])
Total matched:  tensor([9], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264]], device='cuda:0')
torch.Size([1, 102])
Total matched:  tensor([10], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566]], device='cuda:0')
torch.Size([1, 103])
Total matched:  tensor([11], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552]], device='cuda:0')
torch.Size([1, 104])
Total matched:  tensor([12], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430]], device='cuda:0')
torch.Size([1, 105])
Total matched:  tensor([13], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209]],
       device='cuda:0')
torch.Size([1, 106])
Total matched:  tensor([14], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279]],
       device='cuda:0')
torch.Size([1, 107])
Total matched:  tensor([15], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519]],
       device='cuda:0')
torch.Size([1, 108])
Total matched:  tensor([16], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499]], device='cuda:0')
torch.Size([1, 109])
Total matched:  tensor([17], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205]], device='cuda:0')
torch.Size([1, 110])
Total matched:  tensor([18], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13]], device='cuda:0')
torch.Size([1, 111])
Total matched:  tensor([19], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176]], device='cuda:0')
torch.Size([1, 112])
Total matched:  tensor([20], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566]], device='cuda:0')
torch.Size([1, 113])
Total matched:  tensor([21], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939]], device='cuda:0')
torch.Size([1, 114])
Total matched:  tensor([22], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085]],
       device='cuda:0')
torch.Size([1, 115])
Total matched:  tensor([23], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264]],
       device='cuda:0')
torch.Size([1, 116])
Total matched:  tensor([24], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949]],
       device='cuda:0')
torch.Size([1, 117])
Total matched:  tensor([25], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269]], device='cuda:0')
torch.Size([1, 118])
Total matched:  tensor([26], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261]], device='cuda:0')
torch.Size([1, 119])
Total matched:  tensor([27], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11]], device='cuda:0')
torch.Size([1, 120])
Total matched:  tensor([28], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779]], device='cuda:0')
torch.Size([1, 121])
Total matched:  tensor([29], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499]], device='cuda:0')
torch.Size([1, 122])
Total matched:  tensor([30], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649]], device='cuda:0')
torch.Size([1, 123])
Total matched:  tensor([31], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296]],
       device='cuda:0')
torch.Size([1, 124])
Total matched:  tensor([32], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279]],
       device='cuda:0')
torch.Size([1, 125])
Total matched:  tensor([33], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532]],
       device='cuda:0')
torch.Size([1, 126])
Total matched:  tensor([34], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603]], device='cuda:0')
torch.Size([1, 127])
Total matched:  tensor([35], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339]], device='cuda:0')
torch.Size([1, 128])
Total matched:  tensor([36], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264]], device='cuda:0')
torch.Size([1, 129])
Total matched:  tensor([37], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507]], device='cuda:0')
torch.Size([1, 130])
Total matched:  tensor([38], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13]], device='cuda:0')
torch.Size([1, 131])
Total matched:  tensor([39], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510]], device='cuda:0')
torch.Size([1, 132])
Total matched:  tensor([40], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710]],
       device='cuda:0')
torch.Size([1, 133])
Total matched:  tensor([41], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60]],
       device='cuda:0')
torch.Size([1, 134])
Total matched:  tensor([42], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596]],
       device='cuda:0')
torch.Size([1, 135])
Total matched:  tensor([43], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648]], device='cuda:0')
torch.Size([1, 136])
Total matched:  tensor([44], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311]], device='cuda:0')
torch.Size([1, 137])
Total matched:  tensor([45], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505]], device='cuda:0')
torch.Size([1, 138])
Total matched:  tensor([46], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279]], device='cuda:0')
torch.Size([1, 139])
Total matched:  tensor([47], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314]], device='cuda:0')
torch.Size([1, 140])
Total matched:  tensor([48], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552]], device='cuda:0')
torch.Size([1, 141])
Total matched:  tensor([49], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374]],
       device='cuda:0')
torch.Size([1, 142])
Total matched:  tensor([50], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311]],
       device='cuda:0')
torch.Size([1, 143])
Total matched:  tensor([51], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610]],
       device='cuda:0')
torch.Size([1, 144])
Total matched:  tensor([52], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701]], device='cuda:0')
torch.Size([1, 145])
Total matched:  tensor([53], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885]], device='cuda:0')
torch.Size([1, 146])
Total matched:  tensor([54], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11]], device='cuda:0')
torch.Size([1, 147])
Total matched:  tensor([55], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070]], device='cuda:0')
torch.Size([1, 148])
Total matched:  tensor([56], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11]], device='cuda:0')
torch.Size([1, 149])
Total matched:  tensor([57], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477]], device='cuda:0')
torch.Size([1, 150])
Total matched:  tensor([58], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105]],
       device='cuda:0')
torch.Size([1, 151])
Total matched:  tensor([59], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889]],
       device='cuda:0')
torch.Size([1, 152])
Total matched:  tensor([60], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617]],
       device='cuda:0')
torch.Size([1, 153])
Total matched:  tensor([61], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335]], device='cuda:0')
torch.Size([1, 154])
Total matched:  tensor([62], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13]], device='cuda:0')
torch.Size([1, 155])
Total matched:  tensor([63], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435]], device='cuda:0')
torch.Size([1, 156])
Total matched:  tensor([64], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253]], device='cuda:0')
torch.Size([1, 157])
Total matched:  tensor([65], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387]], device='cuda:0')
torch.Size([1, 158])
Total matched:  tensor([66], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025]], device='cuda:0')
torch.Size([1, 159])
Total matched:  tensor([67], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311]],
       device='cuda:0')
torch.Size([1, 160])
Total matched:  tensor([68], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079]],
       device='cuda:0')
torch.Size([1, 161])
Total matched:  tensor([69], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264]],
       device='cuda:0')
torch.Size([1, 162])
Total matched:  tensor([70], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566]], device='cuda:0')
torch.Size([1, 163])
Total matched:  tensor([71], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552]], device='cuda:0')
torch.Size([1, 164])
Total matched:  tensor([72], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 165])
Total matched:  tensor([74], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374]], device='cuda:0')
torch.Size([1, 166])
Total matched:  tensor([75], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539]], device='cuda:0')
torch.Size([1, 167])
Total matched:  tensor([76], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389]], device='cuda:0')
torch.Size([1, 168])
Total matched:  tensor([77], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701]],
       device='cuda:0')
torch.Size([1, 169])
Total matched:  tensor([78], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608]],
       device='cuda:0')
torch.Size([1, 170])
Total matched:  tensor([79], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13]],
       device='cuda:0')
torch.Size([1, 171])
Total matched:  tensor([80], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510]], device='cuda:0')
torch.Size([1, 172])
Total matched:  tensor([81], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 173])
Total matched:  tensor([83], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60]], device='cuda:0')
torch.Size([1, 174])
Total matched:  tensor([84], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843]], device='cuda:0')
torch.Size([1, 175])
Total matched:  tensor([85], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499]], device='cuda:0')
torch.Size([1, 176])
Total matched:  tensor([86], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617]], device='cuda:0')
torch.Size([1, 177])
Total matched:  tensor([87], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035]],
       device='cuda:0')
torch.Size([1, 178])
Total matched:  tensor([88], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523]],
       device='cuda:0')
torch.Size([1, 179])
Total matched:  tensor([89], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701]],
       device='cuda:0')
torch.Size([1, 180])
Total matched:  tensor([90], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671]], device='cuda:0')
torch.Size([1, 181])
Total matched:  tensor([91], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11]], device='cuda:0')
torch.Size([1, 182])
Total matched:  tensor([92], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433]], device='cuda:0')
torch.Size([1, 183])
Total matched:  tensor([93], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596]], device='cuda:0')
torch.Size([1, 184])
Total matched:  tensor([94], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892]], device='cuda:0')
torch.Size([1, 185])
Total matched:  tensor([95], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311]], device='cuda:0')
torch.Size([1, 186])
Total matched:  tensor([96], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616]],
       device='cuda:0')
torch.Size([1, 187])
Total matched:  tensor([97], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519]],
       device='cuda:0')
torch.Size([1, 188])
Total matched:  tensor([98], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323]],
       device='cuda:0')
torch.Size([1, 189])
Total matched:  tensor([99], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729]], device='cuda:0')
torch.Size([1, 190])
Total matched:  tensor([100], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13]], device='cuda:0')
torch.Size([1, 191])
Total matched:  tensor([101], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893]], device='cuda:0')
torch.Size([1, 192])
Total matched:  tensor([102], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771]], device='cuda:0')
torch.Size([1, 193])
Total matched:  tensor([103], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311]], device='cuda:0')
torch.Size([1, 194])
Total matched:  tensor([104], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373]], device='cuda:0')
torch.Size([1, 195])
Total matched:  tensor([105], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279]],
       device='cuda:0')
torch.Size([1, 196])
Total matched:  tensor([106], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060]],
       device='cuda:0')
torch.Size([1, 197])
Total matched:  tensor([107], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194]],
       device='cuda:0')
torch.Size([1, 198])
Total matched:  tensor([108], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323]], device='cuda:0')
torch.Size([1, 199])
Total matched:  tensor([109], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619]], device='cuda:0')
torch.Size([1, 200])
Total matched:  tensor([110], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148]], device='cuda:0')
torch.Size([1, 201])
Total matched:  tensor([111], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374]], device='cuda:0')
torch.Size([1, 202])
Total matched:  tensor([112], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343]], device='cuda:0')
torch.Size([1, 203])
Total matched:  tensor([113], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304]], device='cuda:0')
torch.Size([1, 204])
Total matched:  tensor([114], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279]],
       device='cuda:0')
torch.Size([1, 205])
Total matched:  tensor([115], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430]],
       device='cuda:0')
torch.Size([1, 206])
Total matched:  tensor([116], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499]],
       device='cuda:0')
torch.Size([1, 207])
Total matched:  tensor([117], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527]], device='cuda:0')
torch.Size([1, 208])
Total matched:  tensor([118], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798]], device='cuda:0')
torch.Size([1, 209])
Total matched:  tensor([119], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13]], device='cuda:0')
torch.Size([1, 210])
Total matched:  tensor([120], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 212])
Total matched:  tensor([123], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60]], device='cuda:0')
torch.Size([1, 213])
Total matched:  tensor([124], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102]],
       device='cuda:0')
torch.Size([1, 214])
Total matched:  tensor([125], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596]],
       device='cuda:0')
torch.Size([1, 215])
Total matched:  tensor([126], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101]],
       device='cuda:0')
torch.Size([1, 216])
Total matched:  tensor([127], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062]], device='cuda:0')
torch.Size([1, 217])
Total matched:  tensor([128], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311]], device='cuda:0')
torch.Size([1, 218])
Total matched:  tensor([129], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817]], device='cuda:0')
torch.Size([1, 219])
Total matched:  tensor([130], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279]], device='cuda:0')
torch.Size([1, 220])
Total matched:  tensor([131], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444]], device='cuda:0')
torch.Size([1, 221])
Total matched:  tensor([132], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315]], device='cuda:0')
torch.Size([1, 222])
Total matched:  tensor([133], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279]],
       device='cuda:0')
torch.Size([1, 223])
Total matched:  tensor([134], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566]],
       device='cuda:0')
torch.Size([1, 224])
Total matched:  tensor([135], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552]],
       device='cuda:0')
torch.Size([1, 225])
Total matched:  tensor([136], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13]], device='cuda:0')
torch.Size([1, 226])
Total matched:  tensor([137], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372]], device='cuda:0')
torch.Size([1, 227])
Total matched:  tensor([138], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369]], device='cuda:0')
torch.Size([1, 228])
Total matched:  tensor([139], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544]], device='cuda:0')
torch.Size([1, 229])
Total matched:  tensor([140], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930]], device='cuda:0')
torch.Size([1, 230])
Total matched:  tensor([141], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323]], device='cuda:0')
torch.Size([1, 231])
Total matched:  tensor([142], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137]],
       device='cuda:0')
torch.Size([1, 232])
Total matched:  tensor([143], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311]],
       device='cuda:0')
torch.Size([1, 233])
Total matched:  tensor([144], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023]],
       device='cuda:0')
torch.Size([1, 234])
Total matched:  tensor([145], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626]], device='cuda:0')
torch.Size([1, 235])
Total matched:  tensor([146], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980]], device='cuda:0')
torch.Size([1, 236])
Total matched:  tensor([147], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889]], device='cuda:0')
torch.Size([1, 237])
Total matched:  tensor([148], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617]], device='cuda:0')
torch.Size([1, 238])
Total matched:  tensor([149], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511]], device='cuda:0')
torch.Size([1, 239])
Total matched:  tensor([150], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872]], device='cuda:0')
torch.Size([1, 240])
Total matched:  tensor([151], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600]],
       device='cuda:0')
torch.Size([1, 241])
Total matched:  tensor([152], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13]],
       device='cuda:0')
torch.Size([1, 242])
Total matched:  tensor([153], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710]], device='cuda:0', dtype=torch.int32)
torch.Size([1, 244])
Total matched:  tensor([156], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60]], device='cuda:0')
torch.Size([1, 245])
Total matched:  tensor([157], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830]], device='cuda:0')
torch.Size([1, 246])
Total matched:  tensor([158], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11]], device='cuda:0')
torch.Size([1, 247])
Total matched:  tensor([159], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980]], device='cuda:0')
torch.Size([1, 248])
Total matched:  tensor([160], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279]], device='cuda:0')
torch.Size([1, 249])
Total matched:  tensor([161], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237]],
       device='cuda:0')
torch.Size([1, 250])
Total matched:  tensor([162], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315]],
       device='cuda:0')
torch.Size([1, 251])
Total matched:  tensor([163], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130]],
       device='cuda:0')
torch.Size([1, 252])
Total matched:  tensor([164], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862]], device='cuda:0')
torch.Size([1, 253])
Total matched:  tensor([165], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076]], device='cuda:0')
torch.Size([1, 254])
Total matched:  tensor([166], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 1., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555]], device='cuda:0')
torch.Size([1, 255])
Total matched:  tensor([167], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279]], device='cuda:0')
torch.Size([1, 256])
Total matched:  tensor([168], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566]], device='cuda:0')
torch.Size([1, 257])
Total matched:  tensor([169], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 0., 0., 0., 1., 1., 0.], device='cuda:0')
Matched tokens:  2
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552]], device='cuda:0',
       dtype=torch.int32)
torch.Size([1, 258])
Total matched:  tensor([171], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 1., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13]],
       device='cuda:0')
torch.Size([1, 259])
Total matched:  tensor([172], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472]],
       device='cuda:0')
torch.Size([1, 260])
Total matched:  tensor([173], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390]],
       device='cuda:0')
torch.Size([1, 261])
Total matched:  tensor([174], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311]], device='cuda:0')
torch.Size([1, 262])
Total matched:  tensor([175], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387]], device='cuda:0')
torch.Size([1, 263])
Total matched:  tensor([176], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771]], device='cuda:0')
torch.Size([1, 264])
Total matched:  tensor([177], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430]], device='cuda:0')
torch.Size([1, 265])
Total matched:  tensor([178], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814]], device='cuda:0')
torch.Size([1, 266])
Total matched:  tensor([179], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690]], device='cuda:0')
torch.Size([1, 267])
Total matched:  tensor([180], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387]],
       device='cuda:0')
torch.Size([1, 268])
Total matched:  tensor([181], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070]],
       device='cuda:0')
torch.Size([1, 269])
Total matched:  tensor([182], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311]],
       device='cuda:0')
torch.Size([1, 270])
Total matched:  tensor([183], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311,
           1520]], device='cuda:0')
torch.Size([1, 271])
Total matched:  tensor([184], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311,
           1520,    499]], device='cuda:0')
torch.Size([1, 272])
Total matched:  tensor([185], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311,
           1520,    499,    994]], device='cuda:0')
torch.Size([1, 273])
Total matched:  tensor([186], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311,
           1520,    499,    994,    499]], device='cuda:0')
torch.Size([1, 274])
Total matched:  tensor([187], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311,
           1520,    499,    994,    499,   1205]], device='cuda:0')
torch.Size([1, 275])
Total matched:  tensor([188], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 1., 0., 1., 1.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311,
           1520,    499,    994,    499,   1205,   1124]], device='cuda:0')
torch.Size([1, 276])
Total matched:  tensor([189], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([0., 0., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  1
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311,
           1520,    499,    994,    499,   1205,   1124,     13]],
       device='cuda:0')
torch.Size([1, 277])
Total matched:  tensor([190], device='cuda:0', dtype=torch.int32)

correct predictions:  tensor([1., 1., 0., 0., 0., 0., 0.], device='cuda:0')
Matched tokens:  3
New inputs:  tensor([[128000,     58,   2775,     60,   2650,    311,   6994,   2678,   2626,
           3566,  20256,    510,   2150,     60,  26911,    449,    701,   8661,
           2128,    311,   4358,    701,   8199,    323,   1148,   4519,    701,
           3997,    690,   1205,     13,    510,   9710,     60,   1789,   3187,
             11,    682,  13335,   1288,   2997,    264,   2162,   2199,     11,
           3729,   2199,    323,  11156,   1862,     26,   4869,     11,   3885,
           1205,   2613,  14564,     11,  12185,  66504,     11,   2262,   6373,
           1887,     11,   3566,  28975,    323,  26743,     13,   4324,    264,
           1160,    315,   4395,    499,   1205,    505,    264,   3997,   1603,
           3411,   2212,     11,    779,    499,    617,   7626,   5137,    304,
           4059,     13,    510,   9710,     60,   1472,    649,   1212,    555,
          15389,    369,    264,   3566,   3552,    430,   6209,    279,   4519,
            499,   1205,     13,   9176,   3566,  18939,   3085,    264,   1949,
           9269,   4261,     11,    779,    499,    649,   1296,    279,   2532,
           1603,   3339,    264,  15507,     13,    510,   9710,     60,  13596,
           1648,    311,   1505,    279,   1314,   3552,    374,    311,   2610,
            701,   4885,     11,   3070,     11,    477,  18105,    889,    617,
          13335,     13,   2435,   1253,    387,   3025,    311,   7079,    264,
           3566,   3552,    430,    374,    539,    389,    701,  28608,     13,
            510,   9710,     60,   9843,    499,    617,  74035,   1523,    701,
           2671,     11,    433,    596,    892,    311,   9616,   4519,    323,
           7729,     13,   2893,   2771,    311,   1373,    279,   7060,   1194,
            323,   3619,   1148,    374,   5343,    304,    279,   3430,    499,
            527,  12798,     13,    510,   9710,     60,   1102,    596,   1101,
           3062,    311,   1817,    279,  17444,    315,    279,   3566,   3552,
             13,   9372,    369,   8544,   2930,    323,   3137,    311,   1023,
           2626,   7980,    889,    617,   1511,    872,   3600,     13,    510,
           9710,     60,  17830,     11,   2980,    279,   2237,    315,   6130,
           1862,   9076,    555,    279,   3566,   3552,     13,   1472,   1390,
            311,    387,   2771,    430,    814,    690,    387,   1070,    311,
           1520,    499,    994,    499,   1205,   1124,     13,    510,   9710]],
       device='cuda:0', dtype=torch.int32)
torch.Size([1, 279])
Total matched:  tensor([193], device='cuda:0', dtype=torch.int32)
Draft successes:  6
Final output:  [header] How to obtain small business web hosting [title] Meet with your marketing team to discuss your budget and what features your website will need. [step] For example, all websites should include a home page, contact page and technical support; however, others need email addresses, shopping carts, content management system, web analytics and blogs. Create a list of everything you need from a website before looking around, so you have firm parameters in mind. [step] You can start by searching for a web host that offers the features you need. Many web hosts offer a free trial period, so you can test the service before making a commitment. [step] Another way to find the right host is to ask your friends, family, or colleagues who have websites. They may be able to recommend a web host that is not on your radar. [step] Once you have narrowed down your options, it's time to compare features and prices. Be sure to read the fine print and understand what is included in the price you are paying. [step] It's also important to check the reputation of the web host. Look for reviews online and talk to other business owners who have used their services. [step] Finally, consider the level of customer support offered by the web host. You want to be sure that they will be there to help you when you need them. [step
torch.Size([1, 279])

[2024-11-29 17:17:58,377] [INFO] [launch.py:351:main] Process 467884 exits successfully.
Return status: 0


The runtime is 220.57379364967346